// Code generated by github.com/hasura/ndc-sdk-go/cmd/hasura-ndc-go, DO NOT EDIT.
package api

import (
	"github.com/hasura/ndc-sdk-go/schema"
	"github.com/hasura/ndc-sdk-go/utils"
)

// GetConnectorSchema gets the generated connector schema
func GetConnectorSchema() schema.SchemaResponse {
	return schema.SchemaResponse{
		Collections: []schema.CollectionInfo{},
		ObjectTypes: schema.SchemaResponseObjectTypes{},
		Functions: []schema.FunctionInfo{
			{
				Name:        "prometheus_series",
				Description: utils.ToPtr("find series by label matchers"),
				ResultType:  schema.NewArrayType(schema.NewNamedType("JSON")).Encode(),
				Arguments: map[string]schema.ArgumentInfo{
					"end": {
						Type: schema.NewNullableType(schema.NewNamedType("TimestampTZ")).Encode(),
					},
					"limit": {
						Type: schema.NewNullableType(schema.NewNamedType("Int64")).Encode(),
					},
					"match": {
						Type: schema.NewArrayType(schema.NewNamedType("String")).Encode(),
					},
					"start": {
						Type: schema.NewNullableType(schema.NewNamedType("TimestampTZ")).Encode(),
					},
				},
			},
		},
		Procedures: []schema.ProcedureInfo{},
		ScalarTypes: schema.SchemaResponseScalarTypes{
			"Int64": schema.ScalarType{
				AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
				ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
				Representation:      schema.NewTypeRepresentationInt64().Encode(),
			},
			"JSON": schema.ScalarType{
				AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
				ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
				Representation:      schema.NewTypeRepresentationJSON().Encode(),
			},
			"String": schema.ScalarType{
				AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
				ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
				Representation:      schema.NewTypeRepresentationString().Encode(),
			},
			"TimestampTZ": schema.ScalarType{
				AggregateFunctions:  schema.ScalarTypeAggregateFunctions{},
				ComparisonOperators: map[string]schema.ComparisonOperatorDefinition{},
				Representation:      schema.NewTypeRepresentationTimestampTZ().Encode(),
			},
		},
	}
}

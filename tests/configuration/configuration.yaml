# yaml-language-server: $schema=../../jsonschema/configuration.json
connection_settings:
  url:
    variable: CONNECTION_URL
generator:
  metrics:
    enabled: true
    include: []
    exclude:
      - ^prometheus_+
      - ^go_+
      - ^node_+
metadata:
  metrics:
    net_conntrack_dialer_conn_attempted_total:
      type: counter
      description: Total number of connections attempted by the given dialer a given name.
      labels:
        dialer_name: {}
        instance: {}
        job: {}
    net_conntrack_dialer_conn_closed_total:
      type: counter
      description: Total number of connections closed which originated from the dialer of a given name.
      labels:
        dialer_name: {}
        instance: {}
        job: {}
    net_conntrack_dialer_conn_established_total:
      type: counter
      description: Total number of connections successfully established by the given dialer a given name.
      labels:
        dialer_name: {}
        instance: {}
        job: {}
    net_conntrack_dialer_conn_failed_total:
      type: counter
      description: Total number of connections failed to dial by the dialer a given name.
      labels:
        dialer_name: {}
        instance: {}
        job: {}
        reason: {}
    net_conntrack_listener_conn_accepted_total:
      type: counter
      description: Total number of connections opened to the listener of a given name.
      labels:
        instance: {}
        job: {}
        listener_name: {}
    net_conntrack_listener_conn_closed_total:
      type: counter
      description: Total number of connections closed that were made to the listener of a given name.
      labels:
        instance: {}
        job: {}
        listener_name: {}
    process_cpu_seconds_total:
      type: counter
      description: Total user and system CPU time spent in seconds.
      labels:
        instance: {}
        job: {}
    process_max_fds:
      type: gauge
      description: Maximum number of open file descriptors.
      labels:
        instance: {}
        job: {}
    process_network_receive_bytes_total:
      type: counter
      description: Number of bytes received by the process over the network.
      labels:
        instance: {}
        job: {}
    process_network_transmit_bytes_total:
      type: counter
      description: Number of bytes sent by the process over the network.
      labels:
        instance: {}
        job: {}
    process_open_fds:
      type: gauge
      description: Number of open file descriptors.
      labels:
        instance: {}
        job: {}
    process_resident_memory_bytes:
      type: gauge
      description: Resident memory size in bytes.
      labels:
        instance: {}
        job: {}
    process_start_time_seconds:
      type: gauge
      description: Start time of the process since unix epoch in seconds.
      labels:
        instance: {}
        job: {}
    process_virtual_memory_bytes:
      type: gauge
      description: Virtual memory size in bytes.
      labels:
        instance: {}
        job: {}
    process_virtual_memory_max_bytes:
      type: gauge
      description: Maximum amount of virtual memory available in bytes.
      labels:
        instance: {}
        job: {}
    promhttp_metric_handler_errors_total:
      type: counter
      description: Total number of internal errors encountered by the promhttp metric handler.
      labels:
        cause: {}
        instance: {}
        job: {}
    promhttp_metric_handler_requests_in_flight:
      type: gauge
      description: Current number of scrapes being served.
      labels:
        instance: {}
        job: {}
    promhttp_metric_handler_requests_total:
      type: counter
      description: Total number of scrapes by HTTP status code.
      labels:
        code: {}
        instance: {}
        job: {}
    target_info:
      type: gauge
      description: Target metadata
      labels:
        instance: {}
        job: {}
        service_name: {}
        service_version: {}
        telemetry_sdk_language: {}
        telemetry_sdk_name: {}
        telemetry_sdk_version: {}
  native_operations:
    queries:
      service_up:
        query: up{job="${job}", instance="${instance}"}
        labels:
          job: {}
          instance: {}
        arguments:
          instance:
            type: String
          job:
            type: String
